#
# Default values applied to ALL tests
#
file.ext=jar
#file.ext=jar.pack.gz
bouncy-jce.jar=bcprov-jdk15on-1.59.jar
bouncy-jsse.jar=bctls-jdk15on-1.59.jar
#corba-iiop.jar=glassfish-corba-omgapi-4.2.1.jar
#corba-iiop-impl.jar=glassfish-corba-orb-4.2.1.jar
javax-transaction.jar=javax.transaction-api-1.3.jar
corba-iiop.jar=openjdk-orb-8.1.4.Final.jar
activation.jar=jgdms-activation-${jgdms.version}.jar
activation-param.jar=jgdms-activation-parameters-${jgdms.version}.jar
platform.jar=jgdms-platform-${jgdms.version}.jar
collections.jar=jgdms-collections-${jgdms.version}.jar
jsk-lib.jar=jgdms-lib-${jgdms.version}.jar
jsk-dl.jar=jgdms-lib-dl-${jgdms.version}.${file.ext}
disco.jar=jgdms-discovery-providers-${jgdms.version}.jar
loader.jar=jgdms-pref-class-loader-${jgdms.version}.jar
jeri.jar=jgdms-jeri-${jgdms.version}.jar
jsk.jrmp.jar=jgdms-jrmp-${jgdms.version}.jar
jsk.iiop.jar=jgdms-iiop-${jgdms.version}.jar
jsk.pref.jar=jgdms-pref-class-loader-${jgdms.version}.jar
jsk.url.jar=jgdms-url-integrity-${jgdms.version}.jar
start.jar=service-starter-${jgdms.version}.jar
sharedvm.jar=service-starter-${jgdms.version}.jar
destroy.jar=jgdms-destroy-${jgdms.version}.jar
fiddler.jar=fiddler-service-${jgdms.version}.jar
fiddler-dl.jar=fiddler-dl-${jgdms.version}.${file.ext}
outrigger.jar=outrigger-service-${jgdms.version}.jar
outrigger-dl.jar=outrigger-dl-${jgdms.version}.${file.ext}
outrigger-snaplogstore.jar=outrigger-snaplogstore-${jgdms.version}.jar
mahalo.jar=mahalo-service-${jgdms.version}.jar
mahalo-dl.jar=mahalo-dl-${jgdms.version}.${file.ext}
mercury.jar=mercury-service-${jgdms.version}.jar
mercury-dl.jar=mercury-dl-${jgdms.version}.${file.ext}
norm.jar=norm-service-${jgdms.version}.jar
norm-dl.jar=norm-dl-${jgdms.version}.${file.ext}
group.jar=group-service-${jgdms.version}.jar
reggie.jar=reggie-service-${jgdms.version}.jar
reggie-dl.jar=reggie-dl-${jgdms.version}.${file.ext}
high-scale-lib.jar=high-scale-lib-1.0.6.jar
phoenix.jar=phoenix-${jgdms.version}.jar
phoenix-group.jar=phoenix-group-${jgdms.version}.jar
phoenix-common.jar=phoenix-common-${jgdms.version}.jar
phoenix-init.jar=phoenix-init-${jgdms.version}.jar
phoenix-dl.jar=phoenix-dl-${jgdms.version}.${file.ext}
classserver.jar=classserver-${jgdms.version}.jar
policy.writer.jar=security-policy-debug-${jgdms.version}.jar
jgdms-rmi-tls.jar=jgdms-rmi-tls-${jgdms.version}.jar

# For reggie

net.jini.core.lookup.ServiceRegistrar.type=activatable
net.jini.core.lookup.ServiceRegistrar.impl=org.apache.river.reggie.ActivatableRegistrarImpl
net.jini.core.lookup.ServiceRegistrar.component=org.apache.river.reggie
net.jini.core.lookup.ServiceRegistrar.classpath=\
${jsk.home}$/lib$/${reggie.jar}\
$:${jsk.home}$/lib-dl$/${reggie-dl.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}
net.jini.core.lookup.ServiceRegistrar.codebase=\
http://<gethost>:${org.apache.river.jsk.port}/${reggie-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
net.jini.core.lookup.ServiceRegistrar.policyfile=<url:harness/policy/defaultreggie.policy>
net.jini.core.lookup.ServiceRegistrar.log=reggie_log
net.jini.core.lookup.ServiceRegistrar.membergroups=QATestDefaultGroup
#net.jini.core.lookup.ServiceRegistrar.port=4160
net.jini.core.lookup.ServiceRegistrar.serviceConfiguration=<url:harness/configs/<config>/reggie/reggie.config>
net.jini.core.lookup.ServiceRegistrar.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
net.jini.core.lookup.ServiceRegistrar.preparername=test.reggiePreparer
# example type dependent properties
net.jini.core.lookup.ServiceRegistrar.activatable.impl=org.apache.river.reggie.ActivatableRegistrarImpl
net.jini.core.lookup.ServiceRegistrar.persistent.impl=org.apache.river.reggie.PersistentRegistrarImpl
net.jini.core.lookup.ServiceRegistrar.transient.impl=org.apache.river.reggie.TransientRegistrarImpl
net.jini.core.lookup.ServiceRegistrar.transient.log=none


#
# For fiddler
#

net.jini.discovery.LookupDiscoveryService.type=activatable
net.jini.discovery.LookupDiscoveryService.impl=org.apache.river.fiddler.ActivatableFiddlerImpl
net.jini.discovery.LookupDiscoveryService.component=org.apache.river.fiddler
net.jini.discovery.LookupDiscoveryService.activatable.impl=org.apache.river.fiddler.ActivatableFiddlerImpl
net.jini.discovery.LookupDiscoveryService.persistent.impl=org.apache.river.fiddler.NonActivatableFiddlerImpl
net.jini.discovery.LookupDiscoveryService.transient.impl=org.apache.river.fiddler.TransientFiddlerImpl
net.jini.discovery.LookupDiscoveryService.classpath=\
${jsk.home}$/lib$/${fiddler.jar}\
$:${jsk.home}$/lib-dl$/${fiddler-dl.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}
net.jini.discovery.LookupDiscoveryService.codebase=\
http://<gethost>:${org.apache.river.jsk.port}/${fiddler-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
net.jini.discovery.LookupDiscoveryService.policyfile=<url:harness/policy/defaultfiddler.policy>
net.jini.discovery.LookupDiscoveryService.log=fiddler_log
net.jini.discovery.LookupDiscoveryService.tojoin=${net.jini.core.lookup.ServiceRegistrar.membergroups}
net.jini.discovery.LookupDiscoveryService.serviceConfiguration=<url:harness/configs/<config>/fiddler/fiddler.config>
net.jini.discovery.LookupDiscoveryService.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
net.jini.discovery.LookupDiscoveryService.preparername=test.fiddlerPreparer

#
# For mercury
#

net.jini.event.EventMailbox.type=activatable
net.jini.event.EventMailbox.impl=org.apache.river.mercury.ActivatableMercuryImpl
net.jini.event.EventMailbox.component=org.apache.river.mercury
net.jini.event.EventMailbox.activatable.impl=org.apache.river.mercury.ActivatableMercuryImpl
net.jini.event.EventMailbox.persistent.impl=org.apache.river.mercury.NonActivatableMercuryImpl
net.jini.event.EventMailbox.transient.impl=org.apache.river.mercury.TransientMercuryImpl
net.jini.event.EventMailbox.classpath=\
${jsk.home}$/lib$/${mercury.jar}\
$:${jsk.home}$/lib-dl$/${mercury-dl.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}
net.jini.event.EventMailbox.codebase=\
http://${HOST}:${org.apache.river.jsk.port}/${mercury-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
net.jini.event.EventMailbox.policyfile=<url:harness/policy/defaultmercury.policy>
net.jini.event.EventMailbox.log=mercury_log
net.jini.event.EventMailbox.tojoin=${net.jini.core.lookup.ServiceRegistrar.membergroups}
net.jini.event.EventMailbox.serviceConfiguration=<url:harness/configs/<config>/mercury/mercury.config>
net.jini.event.EventMailbox.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
net.jini.event.EventMailbox.preparername=test.mercuryPreparer

net.jini.event.PullEventMailbox.type=activatable
net.jini.event.PullEventMailbox.impl=org.apache.river.mercury.ActivatableMercuryImpl
net.jini.event.PullEventMailbox.component=org.apache.river.mercury
net.jini.event.PullEventMailbox.activatable.impl=org.apache.river.mercury.ActivatableMercuryImpl
net.jini.event.PullEventMailbox.persistent.impl=org.apache.river.mercury.NonActivatableMercuryImpl
net.jini.event.PullEventMailbox.transient.impl=org.apache.river.mercury.TransientMercuryImpl
net.jini.event.PullEventMailbox.classpath=\
${jsk.home}$/lib$/${mercury.jar}\
$:${jsk.home}$/lib-dl$/${mercury-dl.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}
net.jini.event.PullEventMailbox.codebase=\
http://${HOST}:${org.apache.river.jsk.port}/${mercury-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
net.jini.event.PullEventMailbox.policyfile=<url:harness/policy/defaultmercury.policy>
net.jini.event.PullEventMailbox.log=mercury_log
net.jini.event.PullEventMailbox.tojoin=${net.jini.core.lookup.ServiceRegistrar.membergroups}
net.jini.event.PullEventMailbox.serviceConfiguration=<url:harness/configs/<config>/mercury/mercury.config>
net.jini.event.PullEventMailbox.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
net.jini.event.PullEventMailbox.preparername=test.mercuryPreparer

#
# For norm
#

net.jini.lease.LeaseRenewalService.type=activatable
net.jini.lease.LeaseRenewalService.impl=org.apache.river.norm.ActivatableNormServerImpl
net.jini.lease.LeaseRenewalService.component=org.apache.river.norm
net.jini.lease.LeaseRenewalService.activatable.impl=org.apache.river.norm.ActivatableNormServerImpl
net.jini.lease.LeaseRenewalService.persistent.impl=org.apache.river.norm.PersistentNormServerImpl
net.jini.lease.LeaseRenewalService.transient.impl=org.apache.river.norm.TransientNormServerImpl
net.jini.lease.LeaseRenewalService.classpath=\
${jsk.home}$/lib$/${norm.jar}\
$:${jsk.home}$/lib-dl$/${norm-dl.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}
net.jini.lease.LeaseRenewalService.codebase=\
http://${HOST}:${org.apache.river.jsk.port}/${norm-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
net.jini.lease.LeaseRenewalService.policyfile=<url:harness/policy/defaultnorm.policy>
net.jini.lease.LeaseRenewalService.log=norm_log
net.jini.lease.LeaseRenewalService.tojoin=${net.jini.core.lookup.ServiceRegistrar.membergroups}
net.jini.lease.LeaseRenewalService.serviceConfiguration=<url:harness/configs/<config>/norm/norm.config>
net.jini.lease.LeaseRenewalService.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
net.jini.lease.LeaseRenewalService.preparername=test.normPreparer

# for mahalo
net.jini.core.transaction.server.TransactionManager.type=activatable
net.jini.core.transaction.server.TransactionManager.impl=org.apache.river.mahalo.ActivatableMahaloImpl
net.jini.core.transaction.server.TransactionManager.component=org.apache.river.mahalo
net.jini.core.transaction.server.TransactionManager.activatable.impl=org.apache.river.mahalo.ActivatableMahaloImpl
net.jini.core.transaction.server.TransactionManager.persistent.impl=org.apache.river.mahalo.NonActivatableMahaloImpl
net.jini.core.transaction.server.TransactionManager.transient.impl=org.apache.river.mahalo.TransientMahaloImpl
net.jini.core.transaction.server.TransactionManager.classpath=\
${jsk.home}$/lib$/${mahalo.jar}\
$:${jsk.home}$/lib-dl$/${mahalo-dl.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}
net.jini.core.transaction.server.TransactionManager.codebase=\
http://${HOST}:${org.apache.river.jsk.port}/${mahalo-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
net.jini.core.transaction.server.TransactionManager.policyfile=<url:harness/policy/defaultmahalo.policy>
net.jini.core.transaction.server.TransactionManager.log=mahalo_log
net.jini.core.transaction.server.TransactionManager.tojoin=${net.jini.core.lookup.ServiceRegistrar.membergroups}
net.jini.core.transaction.server.TransactionManager.serviceConfiguration=<url:harness/configs/<config>/mahalo/mahalo.config>
net.jini.core.transaction.server.TransactionManager.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
net.jini.core.transaction.server.TransactionManager.preparername=test.mahaloPreparer

# for outrigger

net.jini.space.JavaSpace.type=activatable
net.jini.space.JavaSpace.impl=org.apache.river.outrigger.ActivatableOutriggerImpl
net.jini.space.JavaSpace.component=org.apache.river.outrigger
net.jini.space.JavaSpace.activatable.impl=org.apache.river.outrigger.ActivatableOutriggerImpl
net.jini.space.JavaSpace.persistent.impl=org.apache.river.outrigger.PersistentOutriggerImpl
net.jini.space.JavaSpace.transient.impl=org.apache.river.outrigger.TransientOutriggerImpl
net.jini.space.JavaSpace.classpath=${jsk.home}$/lib$/${outrigger.jar}\
$:${jsk.home}$/lib-dl$/${outrigger-dl.jar}\
$:${jsk.home}$/lib$/${outrigger-snaplogstore.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}
net.jini.space.JavaSpace.codebase=\
http://${HOST}:${org.apache.river.jsk.port}/${outrigger-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
net.jini.space.JavaSpace.policyfile=<url:harness/policy/defaultoutrigger.policy>
net.jini.space.JavaSpace.log=FrontEndSpace_log
net.jini.space.JavaSpace.tojoin=${net.jini.core.lookup.ServiceRegistrar.membergroups}
net.jini.space.JavaSpace.serviceConfiguration=<url:harness/configs/<config>/outrigger/outrigger.config>
net.jini.space.JavaSpace.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
net.jini.space.JavaSpace.preparername=test.outriggerPreparer
org.apache.river.outrigger.debug=leases,notify

#
# For the shared activation group and its SharedGroupImpl
#
sharedGroup.type=group
sharedGroup.classpath=${jsk.home}$/lib$/${start.jar}\
$:${jsk.home}$/lib$/${collections.jar}\
$:${jsk.home}$/lib$/${high-scale-lib.jar}\
$:${jsk.home}$/lib$/${phoenix-init.jar}\
$:${jsk.home}$/lib$/${platform.jar}\
$:${jsk.home}$/lib-dl$/${jsk-dl.jar}\
$:${jsk.home}$/lib$/${jsk-lib.jar}\
$:${jsk.home}$/lib$/${disco.jar}\
$:${jsk.home}$/lib$/${loader.jar}\
$:${jsk.home}$/lib$/${jeri.jar}\
$:${jsk.home}$/lib$/${phoenix-group.jar}\
$:${jsk.home}$/lib-dl$/${phoenix-dl.jar}\
$:${jsk.home}$/lib$/${phoenix-common.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jsk.url.jar}\
$:${jsk.home}$/lib$/${bouncy-jce.jar}\
$:${jsk.home}$/lib$/${bouncy-jsse.jar}\
$:${jsk.home}$/lib$/${policy.writer.jar}
sharedGroup.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
sharedGroup.policyfile=<url:harness/policy/defaultsharedvm.policy>
sharedGroup.implPrefix=sharedGroupImpl
sharedGroup.serverjvmargs=-server,\
# Don't use SecurityPolicyWriter or DebugDynamicPolicyProvider with jsse
#-Djava.security.manager=org.apache.river.tool.SecurityPolicyWriter,\
#-Dpolicy.provider=org.apache.river.tool.DebugDynamicPolicyProvider,\
#-Dorg.apache.river.tool.DebugDynamicPolicyProvider.grantAll=true,\
# Uncomment the following if you want to attach a debugger:
#-Xdebug,\
#-Xrunjdwp:transport=dt_socket+,address=8000+,server=y+,suspend=y,\
${sharedGroup.serverjvmargs}

sharedGroupImpl.type=activatable
sharedGroupImpl.impl=org.apache.river.start.group.impl.SharedGroupImpl
sharedGroupImpl.component=org.apache.river.start
sharedGroupImpl.classpath=${jsk.home}$/lib$/${group.jar}
sharedGroupImpl.policyfile=<url:harness/policy/defaultgroup.policy>
sharedGroupImpl.serviceConfiguration=<url:harness/configs/<config>/sharedgroup/sharedgroup.config>
sharedGroupImpl.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
sharedGroupImpl.preparername=test.groupPreparer

#
# For the shared non-activatable group (component name probably unnecessary)
#
nonActivatableGroup.type=nonactivatablegroup
nonActivatableGroup.impl=org.apache.river.qa.harness.NonActivatableGroupImpl
nonActivatableGroup.component=nonActivatableGroup
nonActivatableGroup.classpath=${qa.home}$/lib$/nonactivatablegroup.jar\
$:${jsk.home}$/lib$/${disco.jar}\
$:${jsk.home}$/lib$/${loader.jar}\
$:${jsk.home}$/lib$/${jsk-lib.jar}\
$:${jsk.home}$/lib-dl$/${jsk-dl.jar}\
$:${jsk.home}$/lib$/${jeri.jar}\
$:${jsk.home}$/lib$/${start.jar}\
$:${jsk.home}$/lib$/${platform.jar}\
$:${jsk.home}$/lib$/${collections.jar}\
$:${jsk.home}$/lib$/${high-scale-lib.jar}\
$:${jsk.home}$/lib$/${jsk.url.jar}\
$:${jsk.home}$/lib$/${jsk.url.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}\
$:${jsk.home}$/lib$/${bouncy-jce.jar}\
$:${jsk.home}$/lib$/${bouncy-jsse.jar}\
$:${jsk.home}$/lib$/${policy.writer.jar}
nonActivatableGroup.codebase=http://${HOST}:${org.apache.river.qa.port}/nonactivatablegroup-dl.jar
nonActivatableGroup.policyfile=<url:harness/policy/defaultnonactvm.policy>
nonActivatableGroup.serverjvmargs=-server,\
${nonActivatableGroup.serverjvmargs}
#-Djava.security.manager=org.apache.river.tool.SecurityPolicyWriter,\
#-Dpolicy.provider=org.apache.river.tool.DebugDynamicPolicyProvider,\
#-Dorg.apache.river.tool.DebugDynamicPolicyProvider.grantAll=true,\
# Uncomment the following if you want to attach a debugger:
#-Xdebug,\
#-Xrunjdwp:transport=dt_socket+,address=8000+,server=y+,suspend=y,\

#jdb -connect com.sun.jdi.SocketAttach:hostname=localhost,port=8000

#
# For the VM killer - no preparer defined, since it always uses jeri - no configuration files needed
#
vmKiller.type=activatable
vmKiller.impl=org.apache.river.qa.harness.KillerImpl
vmKiller.component=vmkiller
vmKiller.classpath=${qa.home}$/lib$/harness-killer.jar
vmKiller.codebase=http://${HOST}:${org.apache.river.qa.port}/harness-killer-dl.jar
vmKiller.policyfile=<url:harness/policy/all.policy>
vmKiller.serviceConfiguration=-
vmKiller.starterConfiguration=-

#
# For the activation system
#
activationSystem.type=phoenix
activationSystem.policyfile=<url:harness/policy/defaultphoenix.policy>
activationSystem.classpath=${jsk.home}$/lib$/${phoenix-group.jar}\
$:${jsk.home}$/lib$/${phoenix-init.jar}\
$:${jsk.home}$/lib$/${phoenix-common.jar}\
$:${jsk.home}$/lib$/${phoenix-group.jar}\
$:${jsk.home}$/lib-dl$/${phoenix-dl.jar}\
$:${jsk.home}$/lib$/${phoenix.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}\
$:${jsk.home}$/lib$/${disco.jar}\
$:${jsk.home}$/lib$/${loader.jar}\
$:${jsk.home}$/lib$/${jsk-lib.jar}\
$:${jsk.home}$/lib-dl$/${jsk-dl.jar}\
$:${jsk.home}$/lib$/${jeri.jar}\
$:${jsk.home}$/lib$/${start.jar}\
$:${jsk.home}$/lib$/${platform.jar}\
$:${jsk.home}$/lib$/${collections.jar}\
$:${jsk.home}$/lib$/${high-scale-lib.jar}\
$:${jsk.home}$/lib$/${start.jar}\
$:${jsk.home}$/lib$/${jsk.url.jar}\
$:${jsk.home}$/lib$/${bouncy-jce.jar}\
$:${jsk.home}$/lib$/${bouncy-jsse.jar}\
$:${jsk.home}$/lib$/${policy.writer.jar}
activationSystem.codebase=\
http://${HOST}:${org.apache.river.jsk.port}/${phoenix-dl.jar} http://<gethost>:${org.apache.river.jsk.port}/${jsk-dl.jar}
activationSystem.serviceConfiguration=<url:harness/configs/<config>/phoenix/phoenix.config>
activationSystem.starterConfiguration=<url:harness/configs/<config>/starter/starter.config>
activationSystem.preparername=test.phoenixPreparer
activationSystem.serverjvmargs=-server,\
${activationSystem.serverjvmargs}
# Don't use SecurityPolicyWriter or DebugDynamicPolicyProvider with jsse
#-Djava.security.manager=org.apache.river.tool.SecurityPolicyWriter,\
#-Dpolicy.provider=org.apache.river.tool.DebugDynamicPolicyProvider,\
#-Dorg.apache.river.tool.DebugDynamicPolicyProvider.grantAll=true,\
#-Xdebug,\
#-Xrunjdwp:transport=dt_socket+,address=8000+,server=y+,suspend=y,\

#
# for the JSK class server
#
jiniClassServer.type=classServer
jiniClassServer.impl=org.apache.river.tool.ClassServer
jiniClassServer.port=${org.apache.river.jsk.port}
jiniClassServer.dir=${jsk.home}$/lib-dl

#
# for the QA class server
#
qaClassServer.type=classServer
qaClassServer.impl=org.apache.river.tool.ClassServer
qaClassServer.port=${org.apache.river.qa.port}
qaClassServer.dir=${qa.home}$/lib

#
# delay after activation system shutdown to allow for completion
#
org.apache.river.qa.harness.actdeathdelay=5

#
# required properties for all VM's - higher level defs should be self-referential
#   note that the logging properties will be resolved from the standard
#   system property if that property is defined. The '-OD' marker flags this
#   property as optional. If the property is not defined as a system property
#   or in any configuration file, then the property will not be set on the VM.
#
#   You might find the following debugging options useful
#       -Djava.rmi.server.useCodebaseOnly=false,\
#       -Djava.security.debug=access:failure,\
#       -Djava.security.debug=access:domain,\
#       -Djava.security.debug=logincontext,\
#       -Djava.security.debug=certpath,\
#       -Djavax.net.debug=ssl:handshake,\
#   For Java 9 and IIOP
#       --add-modules java.corba,\
#   For Java 9 and later to disable Java Serialization
#       -Djdk.serialFilter=!*,\
#   Security manager is also defined in org.apache.river.qa.harness.TestDescription
#       -Djava.security.manager=org.apache.river.tool.SecurityPolicyWriter,\
#       -Djava.security.manager=org.apache.river.api.security.CombinerSecurityManager,\
#       -Dpolicy.provider=net.jini.security.policy.DynamicPolicyProvider,\
#       -Djava.security.manager=java.rmi.RMISecurityManager,\
#       -Dcrypto.policy=unlimited,\
#       -Dfile.encoding=Cp1252,\ Windows default
#       -Dfile.encoding=Cp20127,\ Windows ASCII
#   This option is used to test previous LoaderKey behaviour in PreferredClassProvider and
#   SecureClassLoader pdCache. 
#       -Dnet.jini.loader.codebaseAnnotation=URL
#
#   Datagram sockets appear to be limited to less than 100 in recent JVM's
#       -Dsun.net.maxDatagramSockets=1024
#
#   To distable stateless TLS
#       -Djdk.tls.server.enableSessionTicketExtension=false,\
#


# no cosmetic whitespace
org.apache.river.qa.harness.globalvmargs=\
-ea,\
-esa,\
-Djava.security.manager=org.apache.river.tool.SecurityPolicyWriter,\
-DSecurityPolicyWriter.path.properties=${qa.home}/harness/policy/securitypolicywriterpath.properties,\
-Djava.net.preferIPv6Addresses=true,\
-Dsun.net.maxDatagramSockets=1024,\
-Djdk.io.permissionsUseCanonicalPath=true,\
-DHOST=${HOST},\
-Djgdms.version=${jgdms.version},\
-Dhigh-scale-lib.jar=${high-scale-lib.jar},\
-Ddisco.jar=${disco.jar},\
-Dcollections.jar=${collections.jar},\
-Dstart.jar=${start.jar},\
-Ddestroy.jar=${destroy.jar},\
-Dgroup.jar=${group.jar},\
-Dfiddler.jar=${fiddler.jar},\
-Dfiddler-dl.jar=${fiddler-dl.jar},\
-Dmahalo.jar=${mahalo.jar},\
-Dmahalo-dl.jar=${mahalo-dl.jar},\
-Dmercury.jar=${mercury.jar},\
-Dmercury-dl.jar=${mercury-dl.jar},\
-Dnorm.jar=${norm.jar},\
-Dnorm-dl.jar=${norm-dl.jar},\
-Doutrigger.jar=${outrigger.jar},\
-Doutrigger-dl.jar=${outrigger-dl.jar},\
-Doutrigger-snaplogstore.jar=${outrigger-snaplogstore.jar},\
-Dreggie.jar=${reggie.jar},\
-Dreggie-dl.jar=${reggie-dl.jar},\
-Djsk-lib.jar=${jsk-lib.jar},\
-Dloader.jar=${loader.jar},\
-Dactivation.jar=${activation.jar},\
-Dactivation-param.jar=${activation-param.jar},\
-Djsk-dl.jar=${jsk-dl.jar},\
-Dplatform.jar=${platform.jar},\
-Djeri.jar=${jeri.jar},\
-Djsk.iiop.jar=${jsk.iiop.jar},\
-Djsk.pref.jar=${jsk.pref.jar},\
-Djsk.url.jar=${jsk.url.jar},\
-Dbouncy-jce.jar=${bouncy-jce.jar},\
-Dbouncy-jsse.jar=${bouncy-jsse.jar},\
-Dclassserver.jar=${classserver.jar},\
-Dphoenix.jar=${phoenix.jar},\
-Dphoenix-common.jar=${phoenix-common.jar},\
-Dphoenix-dl.jar=${phoenix-dl.jar},\
-Dphoenix-group.jar=${phoenix-group.jar},\
-Dphoenix-init.jar=${phoenix-init.jar},\
-Dorg.apache.river.jsk.port=${org.apache.river.jsk.port},\
-Dorg.apache.river.qa.port=${org.apache.river.qa.port},\
-Djsk.home=${jsk.home},\
-Dqa.home=${qa.home},\
-Dorg.apache.river.qa.harness.harnessJar=<harnessJar>,\
-Dorg.apache.river.qa.harness.testJar=<testJar>,\
-Dorg.apache.river.qa.harness.runjiniserver=${org.apache.river.qa.harness.runjiniserver},\
-Dorg.apache.river.qa.harness.runkitserver=${org.apache.river.qa.harness.runkitserver},\
-Djava.security.properties=${org.apache.river.qa.harness.securityproperties},\
-Dorg.apache.river.qa.harness.testhosts=${org.apache.river.qa.harness.testhosts},\
-Djava.util.logging.config.file=${java.util.logging.config.file},\
-Dnet.jini.core.lookup.ServiceRegistrar.portAbitraryIfInUse=true,\
-Dorg.apache.river.discovery.x500.trustStore=${qa.home}${/}harness${/}trust${/}truststore,\
-Dorg.apache.river.discovery.x500.trustStorePassword=trustpw,\
-Dnet.jini.security.allowInsecureConnections=false
#-Dorg.apache.river.discovery.x500.trustStoreType=PKCS12

org.apache.river.qa.harness.securityproperties=<url: harness/trust/dynamic-policy.properties>

#
# miscellaneous
#
# do not hang a read on System.in
org.apache.river.qa.harness.bindInput=false

# The default policy files reflect permissions needed for non-secure configurations.
# For secure configurations, these values should be overridden in the configSet.properties
# file in the appropriate configuration tree. The harness requires this property
# to be defined
#
testPolicyfile=<url:harness/policy/defaulttest.policy>

# The default classpath. This property must be defined, and must include
# all Jini dependencies as components

testClasspath=<harnessJar>$:<testJar>\
$:${jsk.home}$/lib$/${disco.jar}\
$:${jsk.home}$/lib$/${loader.jar}\
$:${jsk.home}$/lib$/${classserver.jar}\
$:${jsk.home}$/lib$/${jeri.jar}\
$:${jsk.home}$/lib$/${platform.jar}\
$:${jsk.home}$/lib$/${collections.jar}\
$:${jsk.home}$/lib$/${jsk-lib.jar}\
$:${jsk.home}$/lib$/${start.jar}\
$:${jsk.home}$/lib-dl$/${jsk-dl.jar}\
$:${jsk.home}$/lib$/${high-scale-lib.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}\
$:${jsk.home}$/lib-dl$/${phoenix-dl.jar}\
$:${jsk.home}$/lib$/${phoenix-init.jar}\
$:${jsk.home}$/lib$/${destroy.jar}\
$:${jsk.home}$/lib$/${jsk.url.jar}\
$:${jsk.home}$/lib$/${bouncy-jce.jar}\
$:${jsk.home}$/lib$/${bouncy-jsse.jar}\
$:${jsk.home}$/lib$/${policy.writer.jar}\
$:${jsk.home}$/lib$/${javax-transaction.jar}\
$:${jsk.home}$/lib$/${corba-iiop.jar}
#\
#$:${jsk.home}$/lib$/${corba-iiop-impl.jar}
#$:${jsk.home}$/lib$/tools.jar
# Alternate test classpath, for tests that don't use <testJar>
#
altClasspath=<harnessJar>\
$:${jsk.home}$/lib$/${disco.jar}\
$:${jsk.home}$/lib$/${loader.jar}\
$:${jsk.home}$/lib$/${classserver.jar}\
$:${jsk.home}$/lib$/${jeri.jar}\
$:${jsk.home}$/lib$/${platform.jar}\
$:${jsk.home}$/lib$/${collections.jar}\
$:${jsk.home}$/lib$/${jsk-lib.jar}\
$:${jsk.home}$/lib$/${start.jar}\
$:${jsk.home}$/lib-dl$/${jsk-dl.jar}\
$:${jsk.home}$/lib$/${high-scale-lib.jar}\
$:${jsk.home}$/lib$/${activation.jar}\
$:${jsk.home}$/lib$/${activation-param.jar}\
$:${jsk.home}$/lib$/${jgdms-rmi-tls.jar}\
$:${jsk.home}$/lib$/${phoenix-init.jar}\
$:${jsk.home}$/lib$/${destroy.jar}\
$:${jsk.home}$/lib$/${jsk.url.jar}\
$:${jsk.home}$/lib$/${bouncy-jce.jar}\
$:${jsk.home}$/lib$/${bouncy-jsse.jar}\
$:${jsk.home}$/lib$/${policy.writer.jar}\
$:${jsk.home}$/lib$/${javax-transaction.jar}\
$:${jsk.home}$/lib$/${corba-iiop.jar}
#\
#$:${jsk.home}$/lib$/${corba-iiop-impl.jar}

#
# Services run with server vm; test runs with client vm
#
# Arguments are comma separated. To embed a comma in
# an argument, use "+,".
#
testjvmargs=${testjvmargs}
#
# defined for historical reasons. 
#
HOST=<gethost>

# the standard, configuration dependent, location of configSet.properties
org.apache.river.qa.harness.configSet=<url:harness/configs/<config>/configSet.properties>

#the default test configuration
org.apache.river.qa.harness.defaultTestConfig=<url:harness/configs/<config>/test.config>

# stuff to add to the classpath of every vm, intended for things
# like logger filters. If defined, its value will be appended to
# the classpath of every vm command, preceeded by the appropriate
# pathseparator
#globalclasspath=

# all additional defs should be done self-referentially
testOverrideProviders=org.apache.river.qa.harness.StoreOverrideProvider
