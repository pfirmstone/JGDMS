# defaults to 1 in qaDefaults
net.jini.discovery.nIntervalsToWait=3

net.jini.discovery.announce=20000

net.jini.core.lookup.ServiceRegistrar.membergroups.0=LDMGroup0_A,LDMGroup0_B,LDMGroup0_C
net.jini.core.lookup.ServiceRegistrar.membergroups.1=LDMGroup1_A,LDMGroup1_B,LDMGroup1_C,LDMGroup1_D
net.jini.core.lookup.ServiceRegistrar.membergroups.2=LDMGroup2_A,LDMGroup2_B,LDMGroup2_C
net.jini.core.lookup.ServiceRegistrar.membergroups.3=LDMGroup3_A,LDMGroup3_B,LDMGroup3_C,LDMGroup3_D
net.jini.core.lookup.ServiceRegistrar.membergroups.4=LDMGroup4_A,LDMGroup4_B,LDMGroup4_C
net.jini.core.lookup.ServiceRegistrar.membergroups.5=LDMGroup5_A,LDMGroup5_B,LDMGroup5_C,LDMGroup5_D
net.jini.core.lookup.ServiceRegistrar.membergroups.6=LDMGroup6_A,LDMGroup6_B,LDMGroup6_C
net.jini.core.lookup.ServiceRegistrar.membergroups.7=LDMGroup7_A,LDMGroup7_B,LDMGroup7_C,LDMGroup7_D
net.jini.core.lookup.ServiceRegistrar.membergroups.8=LDMGroup8_A,LDMGroup8_B,LDMGroup8_C
net.jini.core.lookup.ServiceRegistrar.membergroups.9=LDMGroup9_A,LDMGroup9_B,LDMGroup9_C,LDMGroup9_D

# Unlike the other discovery utility tests, all of the lookup
# discovery manager tests use specific ports so that locators
# can more easily be identified in the mix of by-group and
# by-locator discovery info in the debug output
# (that is, port 8000 corresponds to lookup 0
#           port 1111 corresponds to lookup 1
#           port 2222 corresponds to lookup 2
#           etc.)
net.jini.core.lookup.ServiceRegistrar.port.0=8000
net.jini.core.lookup.ServiceRegistrar.port.1=1111
net.jini.core.lookup.ServiceRegistrar.port.2=2222
net.jini.core.lookup.ServiceRegistrar.port.3=3333
net.jini.core.lookup.ServiceRegistrar.port.4=4444
net.jini.core.lookup.ServiceRegistrar.port.5=5555
net.jini.core.lookup.ServiceRegistrar.port.6=6666
net.jini.core.lookup.ServiceRegistrar.port.7=7777
net.jini.core.lookup.ServiceRegistrar.port.8=8888
net.jini.core.lookup.ServiceRegistrar.port.9=9999

# Note: A number of tests must use the SIMULATED lookup service provided
#       in the org/apache/river/test/share directory rather than the reggie
#       implementation of the lookup service; other tests may choose to
#       use either implementation of the lookup service. This is because
#       the simulated lookup service provides certain features designed
#       to allow one to more easily and directly test specific aspects
#       of group (multicast) discovery.
#
#       For example, a number of tests wish to stop the generation of
#       multicast announcements, or wish to render a lookup service
#       unreachable for the purpose of testing the multicast monitoring
#       mechanism that is specified in the various group discovery
#       utilities and services. If reggie is used, there is no way to
#       to request that reggie stop sending multicast announcements;
#       short of destroying reggie. So for tests that wish to have
#       the lookup service stop sending announcements while remaining
#       reachable, the simulated lookup service is the only implementation
#       that can be used.
#
#       But note that for those tests that wish to both stop announcements
#       and render the lookup service unreachable, reggie may still not be
#       an option. This is because of a particular behavior reggie demonstrates
#       upon being destroyed. Upon being destroyed (rendered unreachable),
#       reggie sends a final multicast announcement indicating the destroyed
#       lookup service belongs to NO_GROUPS (see bug ID 4301078). This will
#       then cause group discovery utilities such as LookupDiscoveryManager 
#       to send a discarded event indicating NO_GROUPS rather than the groups
#       used to start the lookup service. Thus, tests that would expect to
#       receive discarded events whose contents reflect the original member
#       groups of interest (ex.DiscardUnreachable and MulticastMonitorTerminate),
#       will be invalid if the reggie implementation is used for the lookup
#       service.
#       
#       For example, consider the test DiscardUnreachable. After rendering
#       the lookup service unreachable, that test pings and then explicitly
#       discards each unreachable lookup service to verify that the 
#       lookup discovery manager sends a discarded event in response to
#       the discard request from the test. But if reggie is used as the lookup
#       service, then upon destroying reggie, before the test can test for
#       reachability and request the discard of the lookup service, the lookup 
#       will have already been discarded (because an announcement is sent by 
#       reggie to the lookup discovery manager (through the lookup discovery
#       utility) indicating the lookup service no longer belongs to any group 
#       of interest - NO_GROUPS - causing the lookup discovery manager to discard
#       the lookup service). Since the lookup discovery manager has already
#       discarded the lookups, no other discarded events will be sent in response
#       to the discard request from the test; essentially, preempting the purpose
#       of the test.
#
#       Although the test receives the expected number of discarded events due 
#       to the destroy (not the discard request), since the test expects the
#       discarded events to contain the original groups, not NO_GROUPS, and
#       since waitForDiscard() declares success based on not only the number
#       of events, but also the content, this test is invalid if reggie is used.
#
#       Similarly, the test MulticastMonitorTerminate is also invalid if reggie
#       is used as the lookup service.
#
#       Thus, the tests below that can use reggie, are configured to use reggie;
#       and the tests that must use the simulated lookup service are configured
#       to do so. The tests which must the simulated lookup service are:
#
#            DiscardUnreachable
#            MulticastMonitorStop
#            MulticastMonitorStopReplace
#            MulticastMonitorTerminate
#
#            LocsDiscardUnreachable
#            LocsMulticastMonitorStop
#            LocsMulticastMonitorStopReplace
#            LocsMulticastMonitorTerminate
#
#            GroupsDiscardUnreachable
#            GroupsMulticastMonitorStop
#            GroupsMulticastMonitorStopReplace
#            GroupsMulticastMonitorTerminate
#
# The property definitinions below are obsolete and have been replaced with equivalent
# includes in the test description files. They are retained here as comments to help
# clarify the previous comments

#org.apache.river.test.spec.discoverymanager.AddNewDiscoveryChangeListener.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.AddNewDiscoveryListener.prop=org.apache.river.test.share.reggie6_0

#org.apache.river.test.spec.discoverymanager.DiscardUnreachable.prop=org.apache.river.test.share.simReg6_0
#org.apache.river.test.spec.discoverymanager.Discovered.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.DiscoveredAll.prop=org.apache.river.test.share.allgroups_reggie6_0

#org.apache.river.test.spec.discoverymanager.GroupsAddNewDiscoveryChangeListener.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.GroupsAddNewDiscoveryListener.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.GroupsDiscardUnreachable.prop=org.apache.river.test.share.simReg3_0
#org.apache.river.test.spec.discoverymanager.GroupsDiscovered.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.GroupsDiscoveredAll.prop=org.apache.river.test.share.allgroups_reggie6_0
#org.apache.river.test.spec.discoverymanager.GroupsMulticastMonitorChange.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.GroupsMulticastMonitorReplace.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.GroupsMulticastMonitorReplaceAll.prop=org.apache.river.test.share.allgroups_reggie3_0
#org.apache.river.test.spec.discoverymanager.GroupsMulticastMonitorReplaceNone.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.GroupsMulticastMonitorStop.prop=org.apache.river.test.share.simReg3_0
#org.apache.river.test.spec.discoverymanager.GroupsMulticastMonitorTerminate.prop=org.apache.river.test.share.simReg3_0
#org.apache.river.test.spec.discoverymanager.GroupsSetGroupsReplaceAll.prop=org.apache.river.test.share.reggie3_0

#org.apache.river.test.spec.discoverymanager.LocsAddNewDiscoveryChangeListener.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.LocsAddNewDiscoveryListener.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.LocsDiscardUnreachable.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.LocsDiscovered.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.LocsDiscoveredAll.prop=org.apache.river.test.share.allgroups_reggie6_0
#org.apache.river.test.spec.discoverymanager.LocsMulticastMonitorChange.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.LocsMulticastMonitorReplace.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.LocsMulticastMonitorReplaceAll.prop=org.apache.river.test.share.allgroups_reggie3_0
#org.apache.river.test.spec.discoverymanager.LocsMulticastMonitorReplaceNone.prop=org.apache.river.test.share.reggie3_0
#org.apache.river.test.spec.discoverymanager.LocsMulticastMonitorStop.prop=org.apache.river.test.share.simReg3_0
#org.apache.river.test.spec.discoverymanager.LocsMulticastMonitorTerminate.prop=org.apache.river.test.share.simReg3_0
#org.apache.river.test.spec.discoverymanager.LocsSetGroupsReplaceAll.prop=org.apache.river.test.share.reggie3_0

#org.apache.river.test.spec.discoverymanager.MulticastMonitorChange.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.MulticastMonitorReplace.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.MulticastMonitorReplaceAll.prop=org.apache.river.test.share.allgroups_reggie6_0
#org.apache.river.test.spec.discoverymanager.MulticastMonitorReplaceNone.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.MulticastMonitorStop.prop=org.apache.river.test.share.simReg6_0
#org.apache.river.test.spec.discoverymanager.MulticastMonitorTerminate.prop=org.apache.river.test.share.simReg6_0
#org.apache.river.test.spec.discoverymanager.RemoveGroupsAll.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.RemoveGroupsSome.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.SetGroupsReplaceAll.prop=org.apache.river.test.share.reggie6_0
#org.apache.river.test.spec.discoverymanager.SetGroupsReplaceSome.prop=org.apache.river.test.share.reggie6_0

#org.apache.river.test.impl.discoverymanager.RemoveGroupsLocsDiscard.prop=org.apache.river.test.share.lookups1_0

# for the simulator proxy (at least)
testCodebase=http://${HOST}:${org.apache.river.test.port}/qa1-share-dl.jar
