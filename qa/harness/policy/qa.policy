/*
 * This is an example policy file for the lookup service's activation group.
 * You should be able to use this as-is if you use reggie.jar as an
 * executable jar file, or if the classpath you use when running
 * org.apache.river.reggie.CreateLookup is just a single jar file or a single
 * directory with a trailing slash.  Otherwise you need to replace the
 * codebase string below.  If you want the lookup database stored somewhere
 * other than in /tmp/reggie_log/, then change that as well.
 */
grant codebase "file:${java.class.path}" {
    // file system dependent permissions for unix file system
    permission java.io.FilePermission "./*", "read,write,execute,delete"; 
    permission java.io.FilePermission "/tmp", "read,write,execute,delete"; 
    permission java.io.FilePermission "/tmp/-", "read,write,execute,delete"; 
    permission java.io.FilePermission "/var/tmp", "read,write,execute,delete"; 
    permission java.io.FilePermission "/var/tmp/-", "read,write,execute,delete"; 
    // uncomment this one if you need lookup to accept file: codebases
    // permission java.io.FilePermission "<<ALL FILES>>", "read";
    permission java.lang.RuntimePermission "modifyThreadGroup";
    permission java.lang.RuntimePermission "modifyThread";
    permission java.net.SocketPermission "*:1024-", "connect,accept";
    // for http: codebases
    permission java.net.SocketPermission "*:80", "connect";
    permission java.net.SocketPermission "224.0.1.84", "connect,accept";
    permission java.net.SocketPermission "224.0.1.85", "connect,accept";
    permission java.util.PropertyPermission "*", "read";
    permission net.jini.discovery.DiscoveryPermission "*";
    // file system dependent permissions for windows file system
    permission java.io.FilePermission ".\\*", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\windows\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\windows\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\windows\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\windows\\temp\\-", "read,write,execute,delete"; 
};

//
// Permission set intended for use under a shared VM environment.
// For convenience, the "org.apache.river.qa.jars" system property 
// should be set on the VM reading this policy file and its value should 
// be the full path to the QA installation directory (no trailing slash
// required). 
grant codebase "file:${org.apache.river.qa.harness.harnessJar}" {
    // file system dependent permissions for unix file system
    permission java.io.FilePermission "./*", "read,write,execute,delete"; 
    permission java.io.FilePermission "/tmp", "read,write,execute,delete"; 
    permission java.io.FilePermission "/tmp/-", "read,write,execute,delete"; 
    permission java.io.FilePermission "/var/tmp", "read,write,execute,delete"; 
    permission java.io.FilePermission "/var/tmp/-", "read,write,execute,delete";
    // uncomment this one if you need lookup to accept file: codebases
    // permission java.io.FilePermission "<<ALL FILES>>", "read";
    permission java.lang.RuntimePermission "modifyThreadGroup";
    permission java.lang.RuntimePermission "modifyThread";
    permission java.net.SocketPermission "*:1024-", "connect,accept";
    // for http: codebases
    permission java.net.SocketPermission "*:80", "connect";
    permission java.net.SocketPermission "224.0.1.84", "connect,accept";
    permission java.net.SocketPermission "224.0.1.85", "connect,accept";
    permission java.util.PropertyPermission "*", "read";
    permission net.jini.discovery.DiscoveryPermission "*";
    // file system dependent permissions for windows file system
    permission java.io.FilePermission ".\\*", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\windows\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\windows\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\windows\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\windows\\temp\\-", "read,write,execute,delete";
    // THE FOLLOWING ARE REQUIRED IF UTILISING A SECURITY MANAGER FROM COMMAND LINE
    // AT START UP.
    // logging permissions
    permission java.util.logging.LoggingPermission "control";
    // runtime permissions
    permission java.lang.RuntimePermission "createClassLoader";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
    permission java.lang.RuntimePermission "getClassLoader";
    // property permissions
    permission java.util.PropertyPermission "*", "read,write";
    permission java.io.FilePermission "${jsk.home}${/}-", "read";
    permission java.io.FilePermission "${jsk.home}", "read";
    permission java.lang.RuntimePermission "setIO";
    permission java.lang.RuntimePermission "getenv.SOUL";
};
    // THE FOLLOWING ARE REQUIRED IF UTILISING A SECURITY MANAGER FROM COMMAND LINE
    // OR AT START UP.
grant codebase "file:${qa.home}${/}lib${/}jinitests.jar" {
    permission java.util.PropertyPermission "net.jini.discovery.announce", "read";
    permission java.util.PropertyPermission "org.apache.river.qa.harness.testhosts", "read";
};

grant codebase "file:${qa.home}${/}lib/qa1-jini-latest.jar" { 
    // file system dependent permissions for unix file system
    permission java.io.FilePermission "./*", "read,write,execute,delete"; 
    permission java.io.FilePermission "/tmp", "read,write,execute,delete"; 
    permission java.io.FilePermission "/tmp/-", "read,write,execute,delete"; 
    permission java.io.FilePermission "/var/tmp", "read,write,execute,delete"; 
    permission java.io.FilePermission "/var/tmp/-", "read,write,execute,delete"; 
    // uncomment this one if you need lookup to accept file: codebases
    // permission java.io.FilePermission "<<ALL FILES>>", "read";
    permission java.lang.RuntimePermission "modifyThreadGroup";
    permission java.lang.RuntimePermission "modifyThread";
    permission java.net.SocketPermission "*:1024-", "connect,accept";
    // for http: codebases
    permission java.net.SocketPermission "*:80", "connect";
    permission java.net.SocketPermission "224.0.1.84", "connect,accept";
    permission java.net.SocketPermission "224.0.1.85", "connect,accept";
    permission java.util.PropertyPermission "*", "read";
    permission net.jini.discovery.DiscoveryPermission "*";
    // file system dependent permissions for windows file system
    permission java.io.FilePermission ".\\*", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\windows\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "c:\\windows\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\temp\\-", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\windows\\temp", "read,write,execute,delete"; 
    permission java.io.FilePermission "d:\\windows\\temp\\-", "read,write,execute,delete"; 
};
//
