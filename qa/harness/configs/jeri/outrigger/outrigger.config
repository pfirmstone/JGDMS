import net.jini.discovery.ConstrainableLookupLocator;
import net.jini.core.discovery.LookupLocator;
import net.jini.security.BasicProxyPreparer;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.activation.arg.ActivationID;
import net.jini.activation.ActivationExporter;
import net.jini.constraint.BasicMethodConstraints;
import net.jini.constraint.BasicMethodConstraints.MethodDesc;
import net.jini.core.constraint.InvocationConstraint;
import net.jini.core.constraint.InvocationConstraints;
import org.apache.river.discovery.MulticastTimeToLive;

multicast {
    private ttl = 1;
}

org.apache.river.outrigger {
    locatorConstraints = net.jini.discovery.LookupDiscovery.discoveryConstraints;
}

net.jini.lookup.JoinManager {
    registrarPreparer = new BasicProxyPreparer();
    registrationPreparer = new BasicProxyPreparer();
    serviceLeasePreparer = new BasicProxyPreparer();
}

net.jini.discovery.LookupDiscovery {
    registrarPreparer = new BasicProxyPreparer();
    discoveryConstraints = new BasicMethodConstraints(
        new MethodDesc[] {
            new MethodDesc(new InvocationConstraints(
                new InvocationConstraint[] {
                    new MulticastTimeToLive(multicast.ttl)
                },
                null
            ))
        }
    );
}

net.jini.discovery.LookupLocatorDiscovery {
    registrarPreparer = new BasicProxyPreparer();
}

exporter {
    name = "org.apache.river.outrigger.serverExporter";
    activatableExporter = new ActivationExporter(
                        (ActivationID) $data,
                        new BasicJeriExporter(TcpServerEndpoint.getInstance(0),
				    	      new BasicILFactory()));

    persistentExporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(0),
				    new BasicILFactory());
    transientExporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(0),
				    new BasicILFactory());
}


