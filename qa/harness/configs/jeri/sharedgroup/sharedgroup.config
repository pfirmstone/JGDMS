/* Configuration file for configuring the SharedGroupImpl when
 * JERI is used for remote communication.
 *
 * Recall that the SharedGroupImpl is the entity that is registered
 * with the activation system by the ServiceStarter framework, and
 * which is used by the ServiceStarter (or by the test harness
 * framework through the ServiceStarter) to destroy the shared
 * activation group VM. 
 * 
 * The test harness framework views the SharedGroupImpl as just
 * another activatable service. As such, this file acts as the 
 * configuration file for that "service", and thus can be specified
 * as the configuration that is contained in the 'data' parameter
 * input to org.apache.river.start.group.impl.SharedGroupImpl.activate().
 * 
 * To use this configuration, this file should be specified in the
 * following way:
 *
 *   sharedGroupImpl.serviceConfiguration=sharedgroup/sharedgroup.config
 *
 * Note that because SharedGroupImpl is a remote object that is
 * exported, an exporter must be specified. And because SharedGroupImpl
 * retrieves and interacts with the activation system (when destroying
 * the shared activation group VM), a preparer for the proxy to the
 * activation system must also be specified.
 *
 * Also note that the test harness framework itself imposes the
 * following configuration requirement. Once the ServiceStarter
 * framework has started a service (including SharedGroupImpl),
 * the harness' service starter admin retrieves from the 
 * ServiceStarter, a reference (i.e. a proxy) to the started
 * service. Prior to interacting with the service through that
 * proxy, the harness prepares the proxy. Thus, a proxy preparer
 * for the service's proxy must be specified in this file.
 * (For details, refer to the start() method of either,
 * org.apache.river.qa.harness.ActivatableServiceStarterAdmin or
 * org.apache.river.qa.harness.NonActivatableServiceStarterAdmin).
 */
import net.jini.activation.ActivationExporter;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.security.BasicProxyPreparer;
import net.jini.jeri.tcp.*;

import net.jini.activation.arg.ActivationID;

/* Items required by SharedGroupImpl in the ServiceStarter framework */
org.apache.river.start.group {
    activationSystemPreparer = new BasicProxyPreparer();
}

exporter {
    name = "org.apache.river.start.group.exporter";
    private defaultendpoint = TcpServerEndpoint.getInstance(0);
    private defaultfactory = new BasicILFactory();
    activatableExporter = 
  	new ActivationExporter((ActivationID) $data,
  	                       new BasicJeriExporter(defaultendpoint,
						     defaultfactory)); 
}
