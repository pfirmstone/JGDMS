<FindBugsFilter>
    <Match>
        <!-- BasicJeriExporter, when exporting an impl, passes an impl container
     * to the package-private BasicObjectEndpoint constructor so that the
     * BasicObjectEndpoint can reference the impl strongly (through the
     * container) while the object is exported.  The BasicJeriExporter
     * instance holds onto the impl container weakly so it won't prevent
     * the impl from being garbage collected; only the local stub that
     * references the BasicObjectEndpoint will prevent the impl from being
     * garbage collected. -->
        <Class name="net.jini.jeri.BasicJeriExporter$ImplContainer" />
        <Field name="impl"/>
        <Bug pattern="URF_UNREAD_FIELD" />
    </Match>
    <Match>
        <!-- Holds a strong reference to a BasicObjectEndpoint until an
     * acknowledgment has been received. -->
        <Class name="net.jini.jeri.BasicObjectEndpoint$AckListener"/>
        <Field name="ref"/>
        <Bug pattern="URF_UNREAD_FIELD"/>
    </Match>
    <Match>
        <!-- SocketFactory is intended to be Serializable.        -->
        <Class name="net.jini.jeri.http.HttpEndpoint"/>
        <Field name="sf"/>
        <Bug pattern="SE_BAD_FIELD"/>
    </Match>
    <Match>
        <!-- IOException ignored on socket close -->
        <Class name="net.jini.jeri.http.HttpEndpoint$SocketFactoryAdapter"/>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>
    <Match>
        <!-- SocketFactory is intended to be Serializable. -->
        <Class name="net.jini.jeri.kerberos.KerberosEndpoint"/>
        <Field name="csf"/>
        <Bug pattern="SE_BAD_FIELD"/>
    </Match>
    <Match>
        <!-- IOException ignored on socket close        -->
        <Class name="net.jini.jeri.kerberos.KerberosEndpoint$ConnectionEndpointImpl"/>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>
    <Match>
        <!-- IOException ignored on socket close -->
        <Class name="net.jini.jeri.kerberos.KerberosUtil$Connection"/>
        <Method name="close"/>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>
    <Match>
        <!-- IOException ignored on socket close -->
        <Class name="net.jini.jeri.ssl.SslConnection"/>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>
    <Match>
        <!-- Only Boolean.TRUE, Boolean.FALSE and null are used, no danger
             of incorrect reference comparison -->
        <Class name="net.jini.jeri.ssl.SslEndpointImpl"/>
        <Method name="getCallContext"/>
        <Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN"/>
    </Match>
    <Match>
        <!-- IOException ignored on socket close -->
        <Class name="net.jini.jeri.tcp.TcpEndpoint$ConnectionEndpointImpl"/>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>
    <Match>
        <!-- IOException ignored on socket close -->
        <Class name="org.apache.river.jeri.internal.http.HttpClientConnection"/>
        <Method name="disconnect"/>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>
    <Match>
        <Class name="org.apache.river.jeri.internal.mux.Mux"/>
        <Method name="readServerConnectionHeader"/>
        <Bug pattern="DLS_DEAD_LOCAL_STORE"/>
    </Match>
    <Match>
        <!-- Only access to the field reference is synchronized, the referent is published
             to another class, however, the synchronization is not intended to
             synchronize access to the referent, only for correct field visibility. -->
        <Class name="org.apache.river.jeri.internal.runtime.Binding"/>
        <Filed name="requestDispatcher"/>
        <Bug pattern="IS2_INCONSISTENT_SYNC"/>
    </Match>
</FindBugsFilter>
